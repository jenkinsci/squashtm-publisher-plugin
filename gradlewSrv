#! /bin/bash


# ---------------------------------------------------------
# This script helps with running the test Jenkins server
#
# General Options :
# -help : show this help
# -dryrun : simply displays the command line that will run, instead of actually running it 
# -dcevm : use dcevm runtime (if installed)
#
# Jenkins Options :
# -jenport <port> : change the port for Jenkins
# -nojellycache : disable the jelly cache
# -staplertrace : enable stapler trace
# -debugyui : enable yui debug
# -(other) : other options will be passed along to the spawned process. 
#
# Debug Options :
# -nodebug : disable the debugger and the options below
# -dbgport <port> : change the port of the java debugger 
# -logclasspath : will tell the JVM to log the classpath (useful to troubleshoot problems with hotswap)
#
# Note : the server is run using --no-daemon due to https://issues.jenkins-ci.org/browse/JENKINS-33336
# ---------------------------------------------------------


if [ "$1" == "-help" ]
then
	echo
	echo
	echo gradlewSrv : start the test Jenkins server at "http://localhost:<port>/jenkins"
	echo
	echo default is starting the JVM with debug tools on port 8000, using the groovy hostwap agent. Other Jenkins debugging options are disabled.
	echo
	echo -------------
	echo General Options : 
	echo
	echo 	-help : show this help
	echo 	-dryrun : simply displays the command line that will run, instead of actually running it 
	echo	-dcevm : use the dcevm runtime (if installed)
	echo
	echo Jenkins Options :
	echo 	-jenport <port> : changes the port for Jenkins
	echo 	-nojellycache : disable the jelly cache
	echo 	-staplertrace : enable stapler trace
	echo 	-debugyui : enable yui debug
	echo 	-anything : other options will be passed along to the spawned process.
	echo
	echo Debug Options :
	echo 	-nodebug : the JVM will not run with debugging option
	echo 	-dbgport <port> : changes the port of the java debugger
	echo 	-logclasspath : will tell the JVM to log the classpath -useful to troubleshoot problems with hotswap
	echo
	echo

	exit
fi

# -------------- init variables ----------------------

# if you need to redefine JAVA_HOME
# JAVA_HOME=
JENKINS_PORT=8080
JAVA_DBG_PORT=8000
GRADLE_OPTS=
LOG_CP=
DCEVM=0

JELL_CACHE='-Dstapler.jelly.noCache=false'
STAPL_TRACE='-Dstapler.trace=false'
DEBUG_YUI='-Ddebug.YUI=false'
OTHER_OPTS=

DRY_RUN=0
DEBUGMODE=1

# -------------- parse the arguments -----------------

while [ "$1" != "" ]; do

	case "$1" in
		-dryrun) 
			DRY_RUN=1
			;;
		"-nodebug")
			DEBUGMODE=0
			;;
		"-dcevm")
			DCEVM=1
			;;
		"-dbgport")
			JAVA_DBG_PORT="$2"
			shift
			;;
		"-usevm")
			JAVA_HOME=$1
			;;
		"-logclasspath")
			LOG_CP='-XX:+UnlockDiagnosticVMOptions -XX:LogFile=jvmlogs -XX:+TraceClassLoading'
			;;
		"-jenport")
			JENKINS_PORT="$2"
			shift
			;;
		"-nojellycache")
			JELL_CACHE=
			;;
		"-staplertrace")
			STAPL_TRACE=
			;;
		"-debugyui")
			DEBUG_YUI=
			;;
		(*)
			OTHER_OPTS="$OTHER_OPTS $1"
			
	esac
	
	shift

done

# configure the gradle options : debugger, agents etc

GRADLE_OPTS="$LOG_CP -Xmx1024m -XX:MaxPermSize=512m"

if [ "$DEBUGMODE" == "1" ]
then 
	GRADLE_OPTS="$GRADLE_OPTS -Xdebug -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=$JAVA_DBG_PORT"
fi
if [ "$DCEVM" == "1" ]
then 
	GRADLE_OPTS="$GRADLE_OPTS -javaagent:./groovy-hotswap/groovyReset.jar -XXaltjvm=dcevm "
fi

export GRADLE_OPTS
export ALL_ARGS="$JELL_CACHE $STAPL_TRACE $DEBUG_YUI $OTHER_OPTS"

if [ "$DRY_RUN" == "1" ]
then
	echo command to execute :
	echo
	echo 	"command : gradlew.sh server -Dprefix=/jenkins -Djenkins.httpPort=$JENKINS_PORT --no-daemon $ALL_ARGS"
	echo
	echo 	GRADLE_OPTS = $GRADLE_OPTS
	echo
	echo 	JAVA_HOME = $JAVA_HOME
	
	exit
fi

# --------------------------------------

./gradlew server -Dprefix=/jenkins -Djenkins.httpPort=$JENKINS_PORT --no-daemon $ALL_ARGS





























